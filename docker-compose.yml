services:
  rabbitmq:
    image: rabbitmq:4-management-alpine
    container_name: rabbitmq
    ports:
      - "15672:15672"  # RabbitMQ Management UI
      - "5672:5672"    # RabbitMQ AMQP Port
      - "15692:15692"  # Prometheus metrics port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq # data
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro  # Configuration file
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro  # Definitions file
    networks:
      - monitoring_network

  prometheus:
    image: prom/prometheus:v2.53.3
    container_name: prometheus
    environment:
      - PROMETHEUS_STORAGE_RETENTION_TIME=15d  # Retain data for 15 days
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # Prometheus configuration file
      - prometheus_data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "9090:9090" 
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:11.3.0
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  example:
    image: example:1.0.0
    build: 
      context: ./example
      dockerfile: Dockerfile
    environment:
      RABBITMQ_URI: ${RABBITMQ_URI}
    networks:
      - monitoring_network

networks:
  monitoring_network:
    driver: bridge

volumes:
  rabbitmq_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
